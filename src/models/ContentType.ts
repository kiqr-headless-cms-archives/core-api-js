/* tslint:disable */
/* eslint-disable */
/**
 * Core API
 * Core API for KIQR Headless CMS
 *
 * The version of the OpenAPI document: 0.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Field } from './Field';
import {
    FieldFromJSON,
    FieldFromJSONTyped,
    FieldToJSON,
} from './Field';

/**
 * 
 * @export
 * @interface ContentType
 */
export interface ContentType {
    /**
     * 
     * @type {string}
     * @memberof ContentType
     */
    name: string;
    /**
     * 
     * @type {{ [key: string]: Field; }}
     * @memberof ContentType
     */
    fields?: { [key: string]: Field; };
}

/**
 * Check if a given object implements the ContentType interface.
 */
export function instanceOfContentType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function ContentTypeFromJSON(json: any): ContentType {
    return ContentTypeFromJSONTyped(json, false);
}

export function ContentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'fields': !exists(json, 'fields') ? undefined : (mapValues(json['fields'], FieldFromJSON)),
    };
}

export function ContentTypeToJSON(value?: ContentType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'fields': value.fields === undefined ? undefined : (mapValues(value.fields, FieldToJSON)),
    };
}

